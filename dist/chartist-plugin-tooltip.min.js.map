{"version":3,"sources":["chartist-plugin-tooltip.js"],"names":["root","factory","define","amd","returnExportsGlobal","exports","module","this","window","document","Chartist","show","element","style","display","hide","hasClass","className","getAttribute","indexOf","next","nextSibling","text","innerText","textContent","defaultOptions","currency","undefined","tooltipOffset","x","y","appendToBody","class","plugins","tooltip","options","console","log","extend","chart","on","event","selector","callback","$chart","addEventListener","e","target","setPosition","height","$toolTip","offsetHeight","width","offsetWidth","top","pageY","left","pageX","layerY","offsetY","layerX","offsetX","tooltipSelector","Bar","Pie","donut","container","querySelector","createElement","body","appendChild","$point","tooltipText","meta","value","tooltipFnc","label","length","replace","innerHTML","tooltips"],"mappings":"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","file":"chartist-plugin-tooltip.min.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function () {\n      return (root.returnExportsGlobal = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist.plugins.tooltips'] = factory();\n  }\n}(this, function () {\n\n  /**\n   * Chartist.js plugin to display a data label on top of the points in a line chart.\n   *\n   */\n  /* global Chartist */\n  (function (window, document, Chartist) {\n    'use strict';\n\n    var defaultOptions = {\n      currency: undefined,\n      tooltipOffset: {\n        x: 0,\n        y: -20\n      },\n      appendToBody: false,\n      class: undefined\n      // showTooltips: true,\n      // tooltipEvents: ['mousemove', 'touchstart', 'touchmove'],\n      // labelClass: 'ct-label',\n      // labelOffset: {\n      //   x: 0,\n      //   y: -10\n      // },\n      // textAnchor: 'middle'\n    };\n\n    Chartist.plugins = Chartist.plugins || {};\n    Chartist.plugins.tooltip = function (options) {\n      console.log(options);\n      options = Chartist.extend({}, defaultOptions, options);\n\n      return function tooltip(chart) {\n        var tooltipSelector = 'ct-point';\n        if (chart instanceof Chartist.Bar) {\n          tooltipSelector = 'ct-bar';\n        } else if (chart instanceof Chartist.Pie) {\n          // Added support for donut graph\n          if (chart.options.donut) {\n            tooltipSelector = 'ct-slice-donut';\n          } else {\n            tooltipSelector = 'ct-slice-pie';\n          }\n        }\n\n        var $chart = chart.container;\n        var $toolTip = $chart.querySelector('.chartist-tooltip');\n        if (!$toolTip) {\n          $toolTip = document.createElement('div');\n          $toolTip.className = (!options.class) ? 'chartist-tooltip' : 'chartist-tooltip ' + options.class;\n          if (!options.appendToBody) {\n            $chart.appendChild($toolTip);\n          } else {\n            document.body.appendChild($toolTip);\n          }\n        }\n        var height = $toolTip.offsetHeight;\n        var width = $toolTip.offsetWidth;\n\n        hide($toolTip);\n\n        function on(event, selector, callback) {\n          $chart.addEventListener(event, function (e) {\n            if (!selector || hasClass(e.target, selector))\n              callback(e);\n          });\n        }\n\n        on('mouseover', tooltipSelector, function (event) {\n          var $point = event.target;\n          var tooltipText = '';\n\n          var meta = ('<span class=\"chartist-tooltip-meta\">'+$point.getAttribute('ct:meta')+'</span>') || '';\n          var value = '<span class=\"chartist-tooltip-value\">'+$point.getAttribute('ct:value')+'</span>';\n\n          if (options.tooltipFnc) {\n            tooltipText = options.tooltipFnc(meta, value);\n          } else {\n            if (meta) {\n              tooltipText += meta + '<br>';\n            } else {\n              // For Pie Charts also take the labels into account\n              // Could add support for more charts here as well!\n              if (chart instanceof Chartist.Pie) {\n                var label = next($point, 'ct-label');\n                if (label.length > 0) {\n                  tooltipText += text(label) + '<br>';\n                }\n              }\n            }\n\n            if (options.currency) {\n              value = options.currency + value.replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\");\n            }\n            tooltipText += value;\n          }\n\n          $toolTip.innerHTML = tooltipText;\n          setPosition(event);\n          show($toolTip);\n\n          // Remember height and width to avoid wrong position in IE\n          height = $toolTip.offsetHeight;\n          width = $toolTip.offsetWidth;\n        });\n\n        on('mouseout', tooltipSelector, function () {\n          hide($toolTip);\n        });\n\n        on('mousemove', null, function (event) {\n          setPosition(event);\n        });\n\n        function setPosition(event) {\n          // For some reasons, on FF, we can't rely on event.offsetX and event.offsetY,\n          // that's why we prioritize event.layerX and event.layerY\n          // see https://github.com/gionkunz/chartist-js/issues/381\n          height = height || $toolTip.offsetHeight;\n          width = width || $toolTip.offsetWidth;\n          if (!options.appendToBody) {\n            $toolTip.style.top = (event.layerY || event.offsetY) - height + options.tooltipOffset.y + 'px';\n            $toolTip.style.left = (event.layerX || event.offsetX) - width / 2 + options.tooltipOffset.x + 'px';\n          } else {\n            $toolTip.style.top = event.pageY - height  + options.tooltipOffset.y + 'px';\n            $toolTip.style.left = event.pageX - width / 2 + options.tooltipOffset.x + 'px';\n          }\n        }\n      }\n    };\n\n    function show(element) {\n      element.style.display = 'block';\n    }\n\n    function hide(element) {\n      element.style.display = 'none';\n    }\n\n    function hasClass(element, className) {\n      return (' ' + element.getAttribute('class') + ' ').indexOf(' ' + className + ' ') > -1;\n    }\n\n    function next(element, className) {\n      do {\n        element = element.nextSibling;\n      } while (element && !hasClass(element, className));\n      return element;\n    }\n\n    function text(element) {\n      return element.innerText || element.textContent;\n    }\n\n  } (window, document, Chartist));\n\n  return Chartist.plugins.tooltips;\n\n}));\n"]}